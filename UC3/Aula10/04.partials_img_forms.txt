# =============================================
# 1. CONFIGURAÇÕES INICIAIS (settings.py)
# =============================================
"""
CONFIGURAÇÕES NECESSÁRIAS NO settings.py
---------------------------------------"""
SETTINGS_CONFIG = """
# Adicione ao final do settings.py

# Configuração para arquivos de mídia (uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Configurações de templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # ...
                'django.template.context_processors.media',  # Adicione esta linha
            ],
        },
    },
]

# Certifique-se que seu app está em INSTALLED_APPS
INSTALLED_APPS = [
    # ...
    'meuapp',
]
"""

# =============================================
# 2. MODELOS (models.py)
# =============================================
MODELS_CODE = """
from django.db import models
from django.contrib.auth.models import User

class Produto(models.Model):
    '''
    Modelo para produtos com:
    - Nome (CharField)
    - Imagem (ImageField com upload para 'produtos/')
    - Preço (DecimalField)
    - Disponibilidade (BooleanField)
    '''
    nome = models.CharField(max_length=100)
    imagem = models.ImageField(
        upload_to='produtos/',
        blank=True,
        null=True
    )
    preco = models.DecimalField(max_digits=10, decimal_places=2)
    disponivel = models.BooleanField(default=True)

    def __str__(self):
        return self.nome

class UserProfile(models.Model):
    '''
    Estende o modelo User padrão para:
    - Adicionar foto de perfil
    - Campos personalizados
    '''
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    foto = models.ImageField(
        upload_to='profile_pics/',
        default='profile_pics/default.png'
    )
    bio = models.TextField(blank=True)

    def __str__(self):
        return f"{self.user.username}'s Profile"
"""

# =============================================
# 3. FORMULÁRIOS (forms.py)
# =============================================
FORMS_CODE = """
from django import forms
from .models import Produto, UserProfile

class ProdutoForm(forms.ModelForm):
    '''
    Formulário para criação/edição de produtos
    Valida automaticamente campos baseados no modelo
    '''
    class Meta:
        model = Produto
        fields = ['nome', 'imagem', 'preco', 'disponivel']
        widgets = {
            'nome': forms.TextInput(attrs={'class': 'form-control'}),
            'preco': forms.NumberInput(attrs={'class': 'form-control'}),
        }

class ProfileForm(forms.ModelForm):
    '''
    Formulário para upload de foto de perfil
    '''
    class Meta:
        model = UserProfile
        fields = ['foto', 'bio']
        widgets = {
            'bio': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
        }
"""

# =============================================
# 4. VIEWS (views.py)
# =============================================
VIEWS_CODE = """
from django.shortcuts import render, redirect
from .models import Produto
from .forms import ProdutoForm, ProfileForm

def produtos(request):
    '''
    View para listar produtos disponíveis
    Filtra apenas produtos marcados como disponíveis
    '''
    produtos = Produto.objects.filter(disponivel=True)
    return render(request, 'meuapp/produtos.html', {'produtos': produtos})

def add_produto(request):
    '''
    View para adicionar novo produto
    Manipula upload de imagem e validação do formulário
    '''
    if request.method == 'POST':
        form = ProdutoForm(request.POST, request.FILES)
        if form.is_valid():
            form.save()
            return redirect('produtos')
    else:
        form = ProdutoForm()
    return render(request, 'meuapp/add_produto.html', {'form': form})

def upload_profile(request):
    '''
    View para upload de foto de perfil
    '''
    if request.method == 'POST':
        form = ProfileForm(request.POST, request.FILES)
        if form.is_valid():
            profile = form.save(commit=False)
            profile.user = request.user
            profile.save()
            return redirect('home')
    else:
        form = ProfileForm()
    return render(request, 'meuapp/upload_profile.html', {'form': form})
"""

# =============================================
# 5. URLs (urls.py)
# =============================================
URLS_CODE = """
from django.urls import path
from . import views

urlpatterns = [
    path('produtos/', views.produtos, name='produtos'),
    path('add-produto/', views.add_produto, name='add_produto'),
    path('upload-profile/', views.upload_profile, name='upload_profile'),
]
"""

# =============================================
# 6. TEMPLATES PARCIAIS
# =============================================

# 6.1 base.html
BASE_HTML = """
{% load static %}
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}{% endblock %}</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    
    <!-- CSS Personalizado -->
    <link rel="stylesheet" href="{% static 'meuapp/css/styles.css' %}">
</head>
<body>
    {% include 'meuapp/partials/_header.html' %}
    {% include 'meuapp/partials/navbar.html' %}
    
    <main class="container my-4">
        {% block content %}{% endblock %}
    </main>
    
    {% include 'meuapp/partials/_footer.html' %}
    
    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    {% include 'meuapp/partials/_scripts.html' %}
</body>
</html>
"""

# 6.2 _header.html
HEADER_HTML = """
<header class="bg-primary text-white py-3">
    <div class="container">
        <h1>{% block header_title %}Meu Site{% endblock %}</h1>
        <p class="lead">{% block header_subtitle %}{% endblock %}</p>
    </div>
</header>
"""

# 6.3 _footer.html
FOOTER_HTML = """
<footer class="bg-dark text-white py-4 mt-5">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <h5>Sobre Nós</h5>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
            </div>
            <div class="col-md-6 text-md-end">
                <p>&copy; {% now "Y" %} Minha Empresa. Todos os direitos reservados.</p>
            </div>
        </div>
    </div>
</footer>
"""

# 6.4 _scripts.html
SCRIPTS_HTML = """
<!-- Scripts JavaScript personalizados -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Ativa tooltips do Bootstrap
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (element) {
        return new bootstrap.Tooltip(element);
    });
});
</script>
"""

# =============================================
# 7. TEMPLATES DE PÁGINAS
# =============================================

# 7.1 produtos.html
PRODUTOS_HTML = """
{% extends 'meuapp/base.html' %}

{% block title %}Nossos Produtos{% endblock %}

{% block header_title %}Nossos Produtos{% endblock %}
{% block header_subtitle %}Conheça nossa linha completa{% endblock %}

{% block content %}
<div class="row">
    {% for produto in produtos %}
    <div class="col-md-4 mb-4">
        <div class="card h-100">
            <img src="{{ produto.imagem.url }}" class="card-img-top" alt="{{ produto.nome }}">
            <div class="card-body">
                <h5 class="card-title">{{ produto.nome }}</h5>
                <p class="card-text">R$ {{ produto.preco }}</p>
                <a href="#" class="btn btn-primary">Detalhes</a>
            </div>
        </div>
    </div>
    {% empty %}
    <div class="col-12">
        <div class="alert alert-info">Nenhum produto disponível.</div>
    </div>
    {% endfor %}
</div>
{% endblock %}
"""

# 7.2 add_produto.html
ADD_PRODUTO_HTML = """
{% extends 'meuapp/base.html' %}

{% block title %}Adicionar Produto{% endblock %}

{% block content %}
<div class="container">
    <h2>Adicionar Produto</h2>
    <form method="post" enctype="multipart/form-data">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit" class="btn btn-primary">Salvar</button>
    </form>
</div>
{% endblock %}
"""

# 7.3 upload_profile.html
UPLOAD_PROFILE_HTML = """
{% extends 'meuapp/base.html' %}

{% block title %}Atualizar Perfil{% endblock %}

{% block content %}
<div class="container">
    <h2>Atualizar Foto de Perfil</h2>
    <form method="post" enctype="multipart/form-data">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit" class="btn btn-primary">Salvar</button>
    </form>
</div>
{% endblock %}
"""

# =============================================
# 8. MIGRAÇÕES E COMANDOS
# =============================================
"""
COMANDOS PARA EXECUTAR NO TERMINAL:
-----------------------------------
1. Criar migrações:
python manage.py makemigrations

2. Aplicar migrações:
python manage.py migrate

3. Criar superusuário (para acessar admin):
python manage.py createsuperuser

4. Coletar arquivos estáticos (em produção):
python manage.py collectstatic

5. Executar servidor:
python manage.py runserver
"""

# =============================================
# 9. ESTRUTURA FINAL DE PASTAS
# =============================================
"""
ESTRUTURA DE ARQUIVOS RECOMENDADA:
---------------------------------
meuprojeto/
├── media/                   # Pasta para uploads
│   ├── produtos/            # Imagens de produtos
│   └── profile_pics/        # Fotos de perfil
├── meuapp/
│   ├── migrations/          # Migrações do banco
│   ├── static/
│   │   └── meuapp/
│   │       ├── css/         # Arquivos CSS
│   │       └── js/          # JavaScript
│   ├── templates/
│   │   └── meuapp/
│   │       ├── partials/    # Templates parciais
│   │       ├── base.html    # Template base
│   │       └── *.html       # Outros templates
│   ├── __init__.py
│   ├── admin.py
│   ├── apps.py
│   ├── forms.py             # Formulários
│   ├── models.py            # Modelos
│   ├── tests.py
│   └── views.py             # Views
└── meuprojeto/
    ├── __init__.py
    ├── asgi.py
    ├── settings.py          # Configurações
    ├── urls.py              # URLs principais
    └── wsgi.py
"""